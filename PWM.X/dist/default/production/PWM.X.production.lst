

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon May 04 09:13:30 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F884
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     	;# 
    15  0001                     	;# 
    16  0002                     	;# 
    17  0003                     	;# 
    18  0004                     	;# 
    19  0005                     	;# 
    20  0006                     	;# 
    21  0007                     	;# 
    22  0008                     	;# 
    23  0009                     	;# 
    24  000A                     	;# 
    25  000B                     	;# 
    26  000C                     	;# 
    27  000D                     	;# 
    28  000E                     	;# 
    29  000E                     	;# 
    30  000F                     	;# 
    31  0010                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001D                     	;# 
    47  001E                     	;# 
    48  001F                     	;# 
    49  0081                     	;# 
    50  0085                     	;# 
    51  0086                     	;# 
    52  0087                     	;# 
    53  0088                     	;# 
    54  0089                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  008F                     	;# 
    59  0090                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0093                     	;# 
    64  0093                     	;# 
    65  0094                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009A                     	;# 
    72  009B                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  009F                     	;# 
    77  0105                     	;# 
    78  0107                     	;# 
    79  0108                     	;# 
    80  0109                     	;# 
    81  010C                     	;# 
    82  010C                     	;# 
    83  010D                     	;# 
    84  010E                     	;# 
    85  010F                     	;# 
    86  0185                     	;# 
    87  0187                     	;# 
    88  0188                     	;# 
    89  0189                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  0015                     _CCPR1L	set	21
    93  00B8                     _CCP1M0	set	184
    94  00B9                     _CCP1M1	set	185
    95  00BA                     _CCP1M2	set	186
    96  00BB                     _CCP1M3	set	187
    97  00EA                     _CCP2M2	set	234
    98  00EB                     _CCP2M3	set	235
    99  00BC                     _DC1B0	set	188
   100  00BD                     _DC1B1	set	189
   101  005F                     _GIE	set	95
   102  00BE                     _P1M0	set	190
   103  00BF                     _P1M1	set	191
   104  0028                     _RA0	set	40
   105  0029                     _RA1	set	41
   106  002A                     _RA2	set	42
   107  003A                     _RC2	set	58
   108  005D                     _T0IE	set	93
   109  005A                     _T0IF	set	90
   110  0090                     _T2CKPS0	set	144
   111  0091                     _T2CKPS1	set	145
   112  0061                     _TMR2IF	set	97
   113  0092                     _TMR2ON	set	146
   114  0081                     _OPTION_REG	set	129
   115  0092                     _PR2	set	146
   116  0085                     _TRISA	set	133
   117  0087                     _TRISC	set	135
   118  0188                     _ANSEL	set	392
   119                           
   120                           	psect	text0
   121  0000                     __ptext0:	
   122                           ; #config settings
   123                           
   124                           
   125                           ;psect for function _ISR
   126  0000                     
   127                           	psect	cinit
   128  0013                     start_initialization:	
   129  0013                     __initialization:	
   130                           
   131                           ; Clear objects allocated to COMMON
   132  0013  01F5               	clrf	__pbssCOMMON& (0+127)
   133  0014  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   134  0015  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   135  0016                     end_of_initialization:	
   136                           ;End of C runtime variable initialization code
   137                           
   138  0016                     __end_of__initialization:	
   139  0016  0183               	clrf	3
   140  0017  118A  28BC         	ljmp	_main	;jump to C main() function
   141                           
   142                           	psect	bssCOMMON
   143  0075                     __pbssCOMMON:	
   144  0075                     PowerLEDHandler@dim:	
   145  0075                     	ds	1
   146  0076                     PowerLEDHandler@state:	
   147  0076                     	ds	1
   148  0077                     _delay:	
   149  0077                     	ds	1
   150                           
   151                           	psect	cstackCOMMON
   152  0070                     __pcstackCOMMON:	
   153  0070                     ?_SystemInit:	
   154  0070                     ?_PowerLEDHandler:	
   155                           ; 0 bytes @ 0x0
   156                           
   157  0070                     ?_ISR:	
   158                           ; 0 bytes @ 0x0
   159                           
   160  0070                     ??_ISR:	
   161                           ; 0 bytes @ 0x0
   162                           
   163  0070                     ?_main:	
   164                           ; 0 bytes @ 0x0
   165                           
   166                           
   167                           ; 2 bytes @ 0x0
   168  0070                     	ds	4
   169  0074                     ??_SystemInit:	
   170  0074                     ??_PowerLEDHandler:	
   171                           ; 0 bytes @ 0x4
   172                           
   173                           
   174                           ; 0 bytes @ 0x4
   175  0074                     	ds	1
   176  0075                     ??_main:	
   177                           
   178                           	psect	maintext
   179  00BC                     __pmaintext:	
   180                           ; 0 bytes @ 0x5
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   183 ;;
   184 ;; *************** function _main *****************
   185 ;; Defined at:
   186 ;;		line 35 in file "PWM.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;		None
   191 ;; Return value:  Size  Location     Type
   192 ;;                  2   62[None  ] int 
   193 ;; Registers used:
   194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : B00/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   200 ;;      Params:         0       0       0       0
   201 ;;      Locals:         0       0       0       0
   202 ;;      Temps:          0       0       0       0
   203 ;;      Totals:         0       0       0       0
   204 ;;Total ram usage:        0 bytes
   205 ;; Hardware stack levels required when called:    2
   206 ;; This function calls:
   207 ;;		_PowerLEDHandler
   208 ;;		_SystemInit
   209 ;; This function is called by:
   210 ;;		Startup code after reset
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214                           
   215                           ;psect for function _main
   216  00BC                     _main:	
   217                           
   218                           ;PWM.c: 37: SystemInit();
   219                           
   220                           ;incstack = 0
   221                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   222  00BC  118A  2077  118A   	fcall	_SystemInit
   223  00BF                     l662:	
   224                           ;PWM.c: 38: while(1)
   225                           
   226                           
   227                           ;PWM.c: 39: {
   228                           ;PWM.c: 40: PowerLEDHandler();
   229  00BF  118A  2019  118A   	fcall	_PowerLEDHandler
   230  00C2  28BF               	goto	l662
   231  00C3                     __end_of_main:	
   232                           
   233                           	psect	text1
   234  0077                     __ptext1:	
   235 ;; *************** function _SystemInit *****************
   236 ;; Defined at:
   237 ;;		line 48 in file "PWM.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;		None               void
   244 ;; Registers used:
   245 ;;		wreg, status,2
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   251 ;;      Params:         0       0       0       0
   252 ;;      Locals:         0       0       0       0
   253 ;;      Temps:          0       0       0       0
   254 ;;      Totals:         0       0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels used:    1
   257 ;; Hardware stack levels required when called:    1
   258 ;; This function calls:
   259 ;;		Nothing
   260 ;; This function is called by:
   261 ;;		_main
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265                           
   266                           ;psect for function _SystemInit
   267  0077                     _SystemInit:	
   268                           
   269                           ;PWM.c: 50: ANSEL=0;
   270                           
   271                           ;incstack = 0
   272                           ; Regs used in _SystemInit: [wreg+status,2]
   273  0077  1683               	bsf	3,5	;RP0=1, select bank3
   274  0078  1703               	bsf	3,6	;RP1=1, select bank3
   275  0079  0188               	clrf	8	;volatile
   276                           
   277                           ;PWM.c: 51: TRISC=0;
   278  007A  1683               	bsf	3,5	;RP0=1, select bank1
   279  007B  1303               	bcf	3,6	;RP1=0, select bank1
   280  007C  0187               	clrf	7	;volatile
   281                           
   282                           ;PWM.c: 52: RC2 = 0;
   283  007D  1283               	bcf	3,5	;RP0=0, select bank0
   284  007E  1303               	bcf	3,6	;RP1=0, select bank0
   285  007F  1107               	bcf	7,2	;volatile
   286                           
   287                           ;PWM.c: 53: TRISA=0xFF;
   288  0080  30FF               	movlw	255
   289  0081  1683               	bsf	3,5	;RP0=1, select bank1
   290  0082  1303               	bcf	3,6	;RP1=0, select bank1
   291  0083  0085               	movwf	5	;volatile
   292                           
   293                           ;PWM.c: 54: OPTION_REG = 0b11010011;
   294  0084  30D3               	movlw	211
   295  0085  0081               	movwf	1	;volatile
   296                           
   297                           ;PWM.c: 55: T0IE=1;
   298  0086  168B               	bsf	11,5	;volatile
   299                           
   300                           ;PWM.c: 56: T0IF=0;
   301  0087  110B               	bcf	11,2	;volatile
   302                           
   303                           ;PWM.c: 57: GIE=1;
   304  0088  178B               	bsf	11,7	;volatile
   305                           
   306                           ;PWM.c: 58: T2CKPS1=0;
   307  0089  1283               	bcf	3,5	;RP0=0, select bank0
   308  008A  1303               	bcf	3,6	;RP1=0, select bank0
   309  008B  1092               	bcf	18,1	;volatile
   310                           
   311                           ;PWM.c: 59: T2CKPS0=1;
   312  008C  1412               	bsf	18,0	;volatile
   313                           
   314                           ;PWM.c: 60: PR2=249;
   315  008D  30F9               	movlw	249
   316  008E  1683               	bsf	3,5	;RP0=1, select bank1
   317  008F  1303               	bcf	3,6	;RP1=0, select bank1
   318  0090  0092               	movwf	18	;volatile
   319                           
   320                           ;PWM.c: 61: DC1B1=0;
   321  0091  1283               	bcf	3,5	;RP0=0, select bank0
   322  0092  1303               	bcf	3,6	;RP1=0, select bank0
   323  0093  1297               	bcf	23,5	;volatile
   324                           
   325                           ;PWM.c: 62: DC1B0=0;
   326  0094  1217               	bcf	23,4	;volatile
   327                           
   328                           ;PWM.c: 63: CCP1M3 =1;
   329  0095  1597               	bsf	23,3	;volatile
   330                           
   331                           ;PWM.c: 64: CCP1M2 =1;
   332  0096  1517               	bsf	23,2	;volatile
   333                           
   334                           ;PWM.c: 65: CCP1M1 =0;
   335  0097  1097               	bcf	23,1	;volatile
   336                           
   337                           ;PWM.c: 66: CCP1M0 =0;
   338  0098  1017               	bcf	23,0	;volatile
   339                           
   340                           ;PWM.c: 67: P1M1 =0;
   341  0099  1397               	bcf	23,7	;volatile
   342                           
   343                           ;PWM.c: 68: P1M0=0;
   344  009A  1317               	bcf	23,6	;volatile
   345                           
   346                           ;PWM.c: 69: CCP2M3=1;
   347  009B  159D               	bsf	29,3	;volatile
   348                           
   349                           ;PWM.c: 70: CCP2M2=1;
   350  009C  151D               	bsf	29,2	;volatile
   351                           
   352                           ;PWM.c: 71: CCPR1L=0;
   353  009D  0195               	clrf	21	;volatile
   354                           
   355                           ;PWM.c: 72: TMR2IF =0;
   356  009E  108C               	bcf	12,1	;volatile
   357                           
   358                           ;PWM.c: 73: TMR2ON=1;
   359  009F  1512               	bsf	18,2	;volatile
   360  00A0  0008               	return
   361  00A1                     __end_of_SystemInit:	
   362                           
   363                           	psect	text2
   364  0019                     __ptext2:	
   365 ;; *************** function _PowerLEDHandler *****************
   366 ;; Defined at:
   367 ;;		line 75 in file "PWM.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;		None               void
   374 ;; Registers used:
   375 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   381 ;;      Params:         0       0       0       0
   382 ;;      Locals:         0       0       0       0
   383 ;;      Temps:          1       0       0       0
   384 ;;      Totals:         1       0       0       0
   385 ;;Total ram usage:        1 bytes
   386 ;; Hardware stack levels used:    1
   387 ;; Hardware stack levels required when called:    1
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           
   396                           ;psect for function _PowerLEDHandler
   397  0019                     _PowerLEDHandler:	
   398                           
   399                           ;PWM.c: 77: static unsigned char dim = 0;
   400                           ;PWM.c: 78: static unsigned char state = 0;
   401                           ;PWM.c: 79: switch (state)
   402                           
   403                           ;incstack = 0
   404                           ; Regs used in _PowerLEDHandler: [wreg-fsr0h+status,2+status,0]
   405  0019  2868               	goto	l658
   406  001A                     l77:	
   407                           ;PWM.c: 80: {
   408                           ;PWM.c: 81: case 0:
   409                           
   410                           
   411                           ;PWM.c: 82: if (RA0 == 1)
   412  001A  1283               	bcf	3,5	;RP0=0, select bank0
   413  001B  1303               	bcf	3,6	;RP1=0, select bank0
   414  001C  1C05               	btfss	5,0	;volatile
   415  001D  2822               	goto	l610
   416                           
   417                           ;PWM.c: 83: state=2;
   418  001E  3002               	movlw	2
   419  001F  00F4               	movwf	??_PowerLEDHandler
   420  0020  0874               	movf	??_PowerLEDHandler,w
   421  0021  00F6               	movwf	PowerLEDHandler@state
   422  0022                     l610:	
   423                           
   424                           ;PWM.c: 84: if (RA1 == 1)
   425  0022  1C85               	btfss	5,1	;volatile
   426  0023  2828               	goto	l614
   427                           
   428                           ;PWM.c: 85: state=3;
   429  0024  3003               	movlw	3
   430  0025  00F4               	movwf	??_PowerLEDHandler
   431  0026  0874               	movf	??_PowerLEDHandler,w
   432  0027  00F6               	movwf	PowerLEDHandler@state
   433  0028                     l614:	
   434                           
   435                           ;PWM.c: 86: if (RA2 == 1)
   436  0028  1D05               	btfss	5,2	;volatile
   437  0029  0008               	return
   438                           
   439                           ;PWM.c: 87: state=1;
   440  002A  01F6               	clrf	PowerLEDHandler@state
   441  002B  0AF6               	incf	PowerLEDHandler@state,f
   442                           
   443                           ;PWM.c: 88: break;
   444  002C  0008               	return
   445  002D                     l82:	
   446                           ;PWM.c: 89: case 1:
   447                           
   448                           
   449                           ;PWM.c: 90: if(RA2 == 0)
   450  002D  1283               	bcf	3,5	;RP0=0, select bank0
   451  002E  1303               	bcf	3,6	;RP1=0, select bank0
   452  002F  1905               	btfsc	5,2	;volatile
   453  0030  0008               	return
   454                           
   455                           ;PWM.c: 91: {
   456                           ;PWM.c: 92: if (dim == 0)
   457  0031  0875               	movf	PowerLEDHandler@dim,w
   458  0032  1D03               	btfss	3,2
   459  0033  2839               	goto	l622
   460                           
   461                           ;PWM.c: 93: {
   462                           ;PWM.c: 94: dim = 255;
   463  0034  30FF               	movlw	255
   464  0035  00F4               	movwf	??_PowerLEDHandler
   465  0036  0874               	movf	??_PowerLEDHandler,w
   466  0037  00F5               	movwf	PowerLEDHandler@dim
   467                           
   468                           ;PWM.c: 96: }
   469  0038  283A               	goto	l624
   470  0039                     l622:	
   471                           
   472                           ;PWM.c: 98: else
   473                           ;PWM.c: 99: {
   474                           ;PWM.c: 100: dim = 0;
   475  0039  01F5               	clrf	PowerLEDHandler@dim
   476  003A                     l624:	
   477                           
   478                           ;PWM.c: 102: }
   479                           ;PWM.c: 103: CCPR1L = dim;
   480  003A  0875               	movf	PowerLEDHandler@dim,w
   481  003B  0095               	movwf	21	;volatile
   482                           
   483                           ;PWM.c: 104: state=0;
   484  003C  01F6               	clrf	PowerLEDHandler@state
   485                           
   486                           ;PWM.c: 105: }
   487                           ;PWM.c: 106: break;
   488  003D  0008               	return
   489  003E                     l628:	
   490                           ;PWM.c: 107: case 2:
   491                           
   492                           
   493                           ;PWM.c: 108: if (delay==0)
   494  003E  0877               	movf	_delay,w
   495  003F  1D03               	btfss	3,2
   496  0040  0008               	return
   497                           
   498                           ;PWM.c: 109: {
   499                           ;PWM.c: 110: delay= 12;
   500  0041  300C               	movlw	12
   501  0042  00F4               	movwf	??_PowerLEDHandler
   502  0043  0874               	movf	??_PowerLEDHandler,w
   503  0044  00F7               	movwf	_delay
   504                           
   505                           ;PWM.c: 112: if (dim <255)
   506  0045  0A75               	incf	PowerLEDHandler@dim,w
   507  0046  1903               	btfsc	3,2
   508  0047  284C               	goto	l636
   509                           
   510                           ;PWM.c: 113: dim++;
   511  0048  3001               	movlw	1
   512  0049  00F4               	movwf	??_PowerLEDHandler
   513  004A  0874               	movf	??_PowerLEDHandler,w
   514  004B  07F5               	addwf	PowerLEDHandler@dim,f
   515  004C                     l636:	
   516                           
   517                           ;PWM.c: 114: CCPR1L = dim;
   518  004C  0875               	movf	PowerLEDHandler@dim,w
   519  004D  1283               	bcf	3,5	;RP0=0, select bank0
   520  004E  1303               	bcf	3,6	;RP1=0, select bank0
   521  004F  0095               	movwf	21	;volatile
   522                           
   523                           ;PWM.c: 115: if (RA0 == 0)
   524  0050  1805               	btfsc	5,0	;volatile
   525  0051  0008               	return
   526                           
   527                           ;PWM.c: 116: state=0;
   528  0052  01F6               	clrf	PowerLEDHandler@state
   529                           
   530                           ;PWM.c: 117: }
   531                           ;PWM.c: 118: break;
   532  0053  0008               	return
   533  0054                     l642:	
   534                           ;PWM.c: 119: case 3:
   535                           
   536                           
   537                           ;PWM.c: 120: if (delay==0)
   538  0054  0877               	movf	_delay,w
   539  0055  1D03               	btfss	3,2
   540  0056  0008               	return
   541                           
   542                           ;PWM.c: 121: {
   543                           ;PWM.c: 122: delay= 12;
   544  0057  300C               	movlw	12
   545  0058  00F4               	movwf	??_PowerLEDHandler
   546  0059  0874               	movf	??_PowerLEDHandler,w
   547  005A  00F7               	movwf	_delay
   548                           
   549                           ;PWM.c: 123: if (dim >0)
   550  005B  0875               	movf	PowerLEDHandler@dim,w
   551  005C  1903               	btfsc	3,2
   552  005D  2860               	goto	l650
   553                           
   554                           ;PWM.c: 124: dim--;
   555  005E  3001               	movlw	1
   556  005F  02F5               	subwf	PowerLEDHandler@dim,f
   557  0060                     l650:	
   558                           
   559                           ;PWM.c: 125: CCPR1L = dim;
   560  0060  0875               	movf	PowerLEDHandler@dim,w
   561  0061  1283               	bcf	3,5	;RP0=0, select bank0
   562  0062  1303               	bcf	3,6	;RP1=0, select bank0
   563  0063  0095               	movwf	21	;volatile
   564                           
   565                           ;PWM.c: 126: if (RA1 == 0)
   566  0064  1885               	btfsc	5,1	;volatile
   567  0065  0008               	return
   568                           
   569                           ;PWM.c: 127: state=0;
   570  0066  01F6               	clrf	PowerLEDHandler@state
   571                           
   572                           ;PWM.c: 131: }
   573                           
   574                           ;PWM.c: 128: }
   575                           ;PWM.c: 129: break;
   576  0067  0008               	return
   577  0068                     l658:	
   578  0068  0876               	movf	PowerLEDHandler@state,w
   579                           
   580                           ; Switch size 1, requested type "space"
   581                           ; Number of cases is 4, Range of values is 0 to 3
   582                           ; switch strategies available:
   583                           ; Name         Instructions Cycles
   584                           ; simple_byte           13     7 (average)
   585                           ; direct_byte           15     7 (fixed)
   586                           ; jumptable            260     6 (fixed)
   587                           ;	Chosen strategy is simple_byte
   588  0069  3A00               	xorlw	0	; case 0
   589  006A  1903               	skipnz
   590  006B  281A               	goto	l77
   591  006C  3A01               	xorlw	1	; case 1
   592  006D  1903               	skipnz
   593  006E  282D               	goto	l82
   594  006F  3A03               	xorlw	3	; case 2
   595  0070  1903               	skipnz
   596  0071  283E               	goto	l628
   597  0072  3A01               	xorlw	1	; case 3
   598  0073  1903               	skipnz
   599  0074  2854               	goto	l642
   600  0075  2876               	goto	l94
   601  0076                     l94:	
   602  0076  0008               	return
   603  0077                     __end_of_PowerLEDHandler:	
   604                           
   605                           	psect	text3
   606  00A1                     __ptext3:	
   607 ;; *************** function _ISR *****************
   608 ;; Defined at:
   609 ;;		line 164 in file "PWM.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;		None               void
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   623 ;;      Params:         0       0       0       0
   624 ;;      Locals:         0       0       0       0
   625 ;;      Temps:          4       0       0       0
   626 ;;      Totals:         4       0       0       0
   627 ;;Total ram usage:        4 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		Interrupt level 1
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _ISR
   638  00A1                     _ISR:	
   639                           
   640                           ;PWM.c: 166: if(T0IE && T0IF)
   641  00A1  1A8B               	btfsc	11,5	;volatile
   642  00A2  1D0B               	btfss	11,2	;volatile
   643  00A3  28AA               	goto	i1l674
   644                           
   645                           ;PWM.c: 167: {
   646                           ;PWM.c: 168: T0IF = 0;
   647  00A4  110B               	bcf	11,2	;volatile
   648                           
   649                           ;PWM.c: 169: if (delay>0)
   650  00A5  0877               	movf	_delay,w
   651  00A6  1903               	btfsc	3,2
   652  00A7  28AA               	goto	i1l674
   653                           
   654                           ;PWM.c: 170: delay--;
   655  00A8  3001               	movlw	1
   656  00A9  02F7               	subwf	_delay,f
   657  00AA                     i1l674:	
   658                           
   659                           ;PWM.c: 171: }
   660                           ;PWM.c: 172: if(TMR2IF == 1)
   661  00AA  1C8C               	btfss	12,1	;volatile
   662  00AB  28B0               	goto	i1l100
   663                           
   664                           ;PWM.c: 173: {
   665                           ;PWM.c: 174: TMR2IF = 0;
   666  00AC  108C               	bcf	12,1	;volatile
   667                           
   668                           ;PWM.c: 175: TRISC =0;
   669  00AD  1683               	bsf	3,5	;RP0=1, select bank1
   670  00AE  1303               	bcf	3,6	;RP1=0, select bank1
   671  00AF  0187               	clrf	7	;volatile
   672  00B0                     i1l100:	
   673  00B0  0873               	movf	??_ISR+3,w
   674  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   675  00B2  00FF               	movwf	127
   676  00B3  0872               	movf	??_ISR+2,w
   677  00B4  008A               	movwf	10
   678  00B5  0871               	movf	??_ISR+1,w
   679  00B6  0084               	movwf	4
   680  00B7  0E70               	swapf	??_ISR^(0+-128),w
   681  00B8  0083               	movwf	3
   682  00B9  0EFE               	swapf	126,f
   683  00BA  0E7E               	swapf	126,w
   684  00BB  0009               	retfie
   685  00BC                     __end_of_ISR:	
   686  007E                     btemp	set	126	;btemp
   687  007E                     wtemp	set	126
   688  007E                     wtemp0	set	126
   689  0080                     wtemp1	set	128
   690  0082                     wtemp2	set	130
   691  0084                     wtemp3	set	132
   692  0086                     wtemp4	set	134
   693  0088                     wtemp5	set	136
   694  007F                     wtemp6	set	127
   695  007E                     ttemp	set	126
   696  007E                     ttemp0	set	126
   697  0081                     ttemp1	set	129
   698  0084                     ttemp2	set	132
   699  0087                     ttemp3	set	135
   700  007F                     ttemp4	set	127
   701  007E                     ltemp	set	126
   702  007E                     ltemp0	set	126
   703  0082                     ltemp1	set	130
   704  0086                     ltemp2	set	134
   705  0080                     ltemp3	set	128
   706                           
   707                           	psect	intentry
   708  0004                     __pintentry:	
   709                           ;incstack = 0
   710                           ; Regs used in _ISR: [wreg+status,2+status,0]
   711                           
   712  0004                     interrupt_function:	
   713  007E                     saved_w	set	btemp
   714  0004  00FE               	movwf	btemp
   715  0005  0E03               	swapf	3,w
   716  0006  00F0               	movwf	??_ISR
   717  0007  0804               	movf	4,w
   718  0008  00F1               	movwf	??_ISR+1
   719  0009  080A               	movf	10,w
   720  000A  00F2               	movwf	??_ISR+2
   721  000B  1283               	bcf	3,5	;RP0=0, select bank0
   722  000C  1303               	bcf	3,6	;RP1=0, select bank0
   723  000D  087F               	movf	btemp+1,w
   724  000E  00F3               	movwf	??_ISR+3
   725  000F  118A  28A1         	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PowerLEDHandler

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _PowerLEDHandler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PowerLEDHandler                                      1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PowerLEDHandler
   _SystemInit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       8       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       8      10        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon May 04 09:13:30 2015

             __CFG_CP$OFF 0000                        l82 002D                        l77 001A  
                      l94 0076                       l610 0022                       l622 0039  
                     l614 0028                       l624 003A                       l650 0060  
                     l642 0054                       l636 004C                       l628 003E  
                     l662 00BF                       l658 0068                       _GIE 005F  
                     _RA0 0028                       _RA1 0029                       _RA2 002A  
                     _RC2 003A                       _PR2 0092              __CFG_CPD$OFF 0000  
                     _ISR 00A1                       fsr0 0004              __CFG_FOSC$HS 0000  
            __CFG_LVP$OFF 0000                      ?_ISR 0070                      _P1M0 00BE  
                    _P1M1 00BF                      _T0IE 005D                      _T0IF 005A  
            __CFG_WRT$OFF 0000                      _main 00BC                      btemp 007E  
                    ltemp 007E                      start 0011                      ttemp 007E  
                    wtemp 007E             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
                   ??_ISR 0070          ?_PowerLEDHandler 0070                     _DC1B0 00BC  
                   _DC1B1 00BD                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l100 00B0                     i1l674 00AA  
                   _TRISA 0085                     _TRISC 0087            __CFG_FCMEN$OFF 0000  
                   _delay 0077            __CFG_BOREN$OFF 0000                     pclath 000A  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 0013  
            __end_of_main 00C3                    ??_main 0075                    _CCP1M0 00B8  
                  _CCP1M1 00B9                    _CCP1M2 00BA                    _CCP1M3 00BB  
                  _CCP2M2 00EA                    _CCP2M3 00EB                    _CCPR1L 0015  
                  _TMR2IF 0061                    _TMR2ON 0092            __CFG_PWRTE$OFF 0000  
                  saved_w 007E   __end_of__initialization 0016            __pcstackCOMMON 0070  
              _SystemInit 0077                __pmaintext 00BC                __pintentry 0004  
                 _T2CKPS0 0090                   _T2CKPS1 0091                   __ptext0 0000  
                 __ptext1 0077                   __ptext2 0019                   __ptext3 00A1  
            __size_of_ISR 001B               ?_SystemInit 0070  __size_of_PowerLEDHandler 005E  
    end_of_initialization 0016       __size_of_SystemInit 002A       start_initialization 0013  
             __end_of_ISR 00BC      PowerLEDHandler@state 0076         ??_PowerLEDHandler 0074  
             __pbssCOMMON 0075                 ___latbits 0001              ??_SystemInit 0074  
       interrupt_function 0004        __end_of_SystemInit 00A1           _PowerLEDHandler 0019  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0007        PowerLEDHandler@dim 0075  
                intlevel1 0000   __end_of_PowerLEDHandler 0077                _OPTION_REG 0081  
