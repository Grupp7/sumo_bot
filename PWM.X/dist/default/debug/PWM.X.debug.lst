

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat May 02 22:38:01 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F884
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     	;# 
    15  0001                     	;# 
    16  0002                     	;# 
    17  0003                     	;# 
    18  0004                     	;# 
    19  0005                     	;# 
    20  0006                     	;# 
    21  0007                     	;# 
    22  0008                     	;# 
    23  0009                     	;# 
    24  000A                     	;# 
    25  000B                     	;# 
    26  000C                     	;# 
    27  000D                     	;# 
    28  000E                     	;# 
    29  000E                     	;# 
    30  000F                     	;# 
    31  0010                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001D                     	;# 
    47  001E                     	;# 
    48  001F                     	;# 
    49  0081                     	;# 
    50  0085                     	;# 
    51  0086                     	;# 
    52  0087                     	;# 
    53  0088                     	;# 
    54  0089                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  008F                     	;# 
    59  0090                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0093                     	;# 
    64  0093                     	;# 
    65  0094                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009A                     	;# 
    72  009B                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  009F                     	;# 
    77  0105                     	;# 
    78  0107                     	;# 
    79  0108                     	;# 
    80  0109                     	;# 
    81  010C                     	;# 
    82  010C                     	;# 
    83  010D                     	;# 
    84  010E                     	;# 
    85  010F                     	;# 
    86  0185                     	;# 
    87  0187                     	;# 
    88  0188                     	;# 
    89  0189                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  0015                     _CCPR1L	set	21
    93  00BC                     _DC1B0	set	188
    94  00BD                     _DC1B1	set	189
    95  005F                     _GIE	set	95
    96  0028                     _RA0	set	40
    97  0029                     _RA1	set	41
    98  002A                     _RA2	set	42
    99  003A                     _RC2	set	58
   100  005D                     _T0IE	set	93
   101  005A                     _T0IF	set	90
   102  0090                     _T2CKPS0	set	144
   103  0091                     _T2CKPS1	set	145
   104  0092                     _TMR2ON	set	146
   105  0081                     _OPTION_REG	set	129
   106  0092                     _PR2	set	146
   107  0085                     _TRISA	set	133
   108  0087                     _TRISC	set	135
   109  0188                     _ANSEL	set	392
   110                           
   111                           	psect	text0
   112  0000                     __ptext0:	
   113                           ; #config settings
   114                           
   115                           
   116                           ;psect for function _ISR
   117  0000                     
   118                           	psect	cinit
   119  0013                     start_initialization:	
   120  0013                     __initialization:	
   121                           
   122                           ; Clear objects allocated to COMMON
   123  0013  01F6               	clrf	__pbssCOMMON& (0+127)
   124  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   125  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   126  0016                     end_of_initialization:	
   127                           ;End of C runtime variable initialization code
   128                           
   129  0016                     __end_of__initialization:	
   130  0016  0183               	clrf	3
   131  0017  118A  28AE         	ljmp	_main	;jump to C main() function
   132                           
   133                           	psect	bssCOMMON
   134  0076                     __pbssCOMMON:	
   135  0076                     PowerLEDHandler@dim:	
   136  0076                     	ds	1
   137  0077                     PowerLEDHandler@state:	
   138  0077                     	ds	1
   139  0078                     _delay:	
   140  0078                     	ds	1
   141                           
   142                           	psect	cstackCOMMON
   143  0071                     __pcstackCOMMON:	
   144  0071                     ?_SystemInit:	
   145  0071                     ?_PowerLEDHandler:	
   146                           ; 0 bytes @ 0x0
   147                           
   148  0071                     ?_ISR:	
   149                           ; 0 bytes @ 0x0
   150                           
   151  0071                     ??_ISR:	
   152                           ; 0 bytes @ 0x0
   153                           
   154  0071                     ?_main:	
   155                           ; 0 bytes @ 0x0
   156                           
   157                           
   158                           ; 2 bytes @ 0x0
   159  0071                     	ds	4
   160  0075                     ??_SystemInit:	
   161  0075                     ??_PowerLEDHandler:	
   162                           ; 0 bytes @ 0x4
   163                           
   164                           
   165                           ; 0 bytes @ 0x4
   166  0075                     	ds	1
   167  0076                     ??_main:	
   168                           
   169                           	psect	maintext
   170  00AE                     __pmaintext:	
   171                           ; 0 bytes @ 0x5
   172 ;;
   173 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   174 ;;
   175 ;; *************** function _main *****************
   176 ;; Defined at:
   177 ;;		line 35 in file "PWM.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  2   44[None  ] int 
   184 ;; Registers used:
   185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   186 ;; Tracked objects:
   187 ;;		On entry : B00/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   191 ;;      Params:         0       0       0       0
   192 ;;      Locals:         0       0       0       0
   193 ;;      Temps:          0       0       0       0
   194 ;;      Totals:         0       0       0       0
   195 ;;Total ram usage:        0 bytes
   196 ;; Hardware stack levels required when called:    2
   197 ;; This function calls:
   198 ;;		_PowerLEDHandler
   199 ;;		_SystemInit
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           
   206                           ;psect for function _main
   207  00AE                     _main:	
   208                           
   209                           ;PWM.c: 37: SystemInit();
   210                           
   211                           ;incstack = 0
   212                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   213  00AE  118A  2079  118A   	fcall	_SystemInit
   214  00B1                     l629:	
   215                           ;PWM.c: 38: while(1)
   216                           
   217                           
   218                           ;PWM.c: 39: {
   219                           ;PWM.c: 40: PowerLEDHandler();
   220  00B1  118A  2019  118A   	fcall	_PowerLEDHandler
   221  00B4  28B1               	goto	l629
   222  00B5                     __end_of_main:	
   223                           
   224                           	psect	text1
   225  0079                     __ptext1:	
   226 ;; *************** function _SystemInit *****************
   227 ;; Defined at:
   228 ;;		line 48 in file "PWM.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;		None               void
   235 ;; Registers used:
   236 ;;		wreg, status,2
   237 ;; Tracked objects:
   238 ;;		On entry : 0/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   242 ;;      Params:         0       0       0       0
   243 ;;      Locals:         0       0       0       0
   244 ;;      Temps:          0       0       0       0
   245 ;;      Totals:         0       0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels used:    1
   248 ;; Hardware stack levels required when called:    1
   249 ;; This function calls:
   250 ;;		Nothing
   251 ;; This function is called by:
   252 ;;		_main
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           
   257                           ;psect for function _SystemInit
   258  0079                     _SystemInit:	
   259                           
   260                           ;PWM.c: 50: ANSEL=0;
   261                           
   262                           ;incstack = 0
   263                           ; Regs used in _SystemInit: [wreg+status,2]
   264  0079  1683               	bsf	3,5	;RP0=1, select bank3
   265  007A  1703               	bsf	3,6	;RP1=1, select bank3
   266  007B  0188               	clrf	8	;volatile
   267                           
   268                           ;PWM.c: 51: TRISC=0;
   269  007C  1683               	bsf	3,5	;RP0=1, select bank1
   270  007D  1303               	bcf	3,6	;RP1=0, select bank1
   271  007E  0187               	clrf	7	;volatile
   272                           
   273                           ;PWM.c: 52: RC2 = 0;
   274  007F  1283               	bcf	3,5	;RP0=0, select bank0
   275  0080  1303               	bcf	3,6	;RP1=0, select bank0
   276  0081  1107               	bcf	7,2	;volatile
   277                           
   278                           ;PWM.c: 53: TRISA=0xFF;
   279  0082  30FF               	movlw	255
   280  0083  1683               	bsf	3,5	;RP0=1, select bank1
   281  0084  1303               	bcf	3,6	;RP1=0, select bank1
   282  0085  0085               	movwf	5	;volatile
   283                           
   284                           ;PWM.c: 54: OPTION_REG = 0b11010101;
   285  0086  30D5               	movlw	213
   286  0087  0081               	movwf	1	;volatile
   287                           
   288                           ;PWM.c: 55: T0IE=1;
   289  0088  168B               	bsf	11,5	;volatile
   290                           
   291                           ;PWM.c: 56: T0IF=0;
   292  0089  110B               	bcf	11,2	;volatile
   293                           
   294                           ;PWM.c: 57: GIE=1;
   295  008A  178B               	bsf	11,7	;volatile
   296                           
   297                           ;PWM.c: 58: T2CKPS1=0;
   298  008B  1283               	bcf	3,5	;RP0=0, select bank0
   299  008C  1303               	bcf	3,6	;RP1=0, select bank0
   300  008D  1092               	bcf	18,1	;volatile
   301                           
   302                           ;PWM.c: 59: T2CKPS0=1;
   303  008E  1412               	bsf	18,0	;volatile
   304                           
   305                           ;PWM.c: 60: PR2=249;
   306  008F  30F9               	movlw	249
   307  0090  1683               	bsf	3,5	;RP0=1, select bank1
   308  0091  1303               	bcf	3,6	;RP1=0, select bank1
   309  0092  0092               	movwf	18	;volatile
   310                           
   311                           ;PWM.c: 61: DC1B1=0;
   312  0093  1283               	bcf	3,5	;RP0=0, select bank0
   313  0094  1303               	bcf	3,6	;RP1=0, select bank0
   314  0095  1297               	bcf	23,5	;volatile
   315                           
   316                           ;PWM.c: 62: DC1B0=0;
   317  0096  1217               	bcf	23,4	;volatile
   318                           
   319                           ;PWM.c: 63: CCPR1L=0;
   320  0097  0195               	clrf	21	;volatile
   321                           
   322                           ;PWM.c: 64: TMR2ON=1;
   323  0098  1512               	bsf	18,2	;volatile
   324  0099  0008               	return
   325  009A                     __end_of_SystemInit:	
   326                           
   327                           	psect	text2
   328  0019                     __ptext2:	
   329 ;; *************** function _PowerLEDHandler *****************
   330 ;; Defined at:
   331 ;;		line 66 in file "PWM.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;		None               void
   338 ;; Registers used:
   339 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   345 ;;      Params:         0       0       0       0
   346 ;;      Locals:         0       0       0       0
   347 ;;      Temps:          1       0       0       0
   348 ;;      Totals:         1       0       0       0
   349 ;;Total ram usage:        1 bytes
   350 ;; Hardware stack levels used:    1
   351 ;; Hardware stack levels required when called:    1
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           
   360                           ;psect for function _PowerLEDHandler
   361  0019                     _PowerLEDHandler:	
   362                           
   363                           ;PWM.c: 68: static unsigned char dim = 0;
   364                           ;PWM.c: 69: static unsigned char state = 0;
   365                           ;PWM.c: 70: switch (state)
   366                           
   367                           ;incstack = 0
   368                           ; Regs used in _PowerLEDHandler: [wreg-fsr0h+status,2+status,0]
   369  0019  286A               	goto	l625
   370  001A                     l59:	
   371                           ;PWM.c: 71: {
   372                           ;PWM.c: 72: case 0:
   373                           
   374                           
   375                           ;PWM.c: 73: if (RA0 == 1)
   376  001A  1283               	bcf	3,5	;RP0=0, select bank0
   377  001B  1303               	bcf	3,6	;RP1=0, select bank0
   378  001C  1C05               	btfss	5,0	;volatile
   379  001D  2822               	goto	l573
   380                           
   381                           ;PWM.c: 74: state=2;
   382  001E  3002               	movlw	2
   383  001F  00F5               	movwf	??_PowerLEDHandler
   384  0020  0875               	movf	??_PowerLEDHandler,w
   385  0021  00F7               	movwf	PowerLEDHandler@state
   386  0022                     l573:	
   387                           
   388                           ;PWM.c: 75: if (RA1 == 1)
   389  0022  1C85               	btfss	5,1	;volatile
   390  0023  2828               	goto	l577
   391                           
   392                           ;PWM.c: 76: state=3;
   393  0024  3003               	movlw	3
   394  0025  00F5               	movwf	??_PowerLEDHandler
   395  0026  0875               	movf	??_PowerLEDHandler,w
   396  0027  00F7               	movwf	PowerLEDHandler@state
   397  0028                     l577:	
   398                           
   399                           ;PWM.c: 77: if (RA2 == 1)
   400  0028  1D05               	btfss	5,2	;volatile
   401  0029  0008               	return
   402                           
   403                           ;PWM.c: 78: state=1;
   404  002A  01F7               	clrf	PowerLEDHandler@state
   405  002B  0AF7               	incf	PowerLEDHandler@state,f
   406                           
   407                           ;PWM.c: 79: break;
   408  002C  0008               	return
   409  002D                     l64:	
   410                           ;PWM.c: 80: case 1:
   411                           
   412                           
   413                           ;PWM.c: 81: if(RA2 == 0)
   414  002D  1283               	bcf	3,5	;RP0=0, select bank0
   415  002E  1303               	bcf	3,6	;RP1=0, select bank0
   416  002F  1905               	btfsc	5,2	;volatile
   417  0030  0008               	return
   418                           
   419                           ;PWM.c: 82: {
   420                           ;PWM.c: 83: if (dim == 0)
   421  0031  0876               	movf	PowerLEDHandler@dim,w
   422  0032  1D03               	btfss	3,2
   423  0033  283A               	goto	l587
   424                           
   425                           ;PWM.c: 84: {
   426                           ;PWM.c: 85: dim = 200;
   427  0034  30C8               	movlw	200
   428  0035  00F5               	movwf	??_PowerLEDHandler
   429  0036  0875               	movf	??_PowerLEDHandler,w
   430  0037  00F6               	movwf	PowerLEDHandler@dim
   431                           
   432                           ;PWM.c: 86: RC2 = 1;
   433  0038  1507               	bsf	7,2	;volatile
   434                           
   435                           ;PWM.c: 87: }
   436  0039  283C               	goto	l591
   437  003A                     l587:	
   438                           
   439                           ;PWM.c: 89: else
   440                           ;PWM.c: 90: {
   441                           ;PWM.c: 91: dim = 0;
   442  003A  01F6               	clrf	PowerLEDHandler@dim
   443                           
   444                           ;PWM.c: 92: RC2 =0;
   445  003B  1107               	bcf	7,2	;volatile
   446  003C                     l591:	
   447                           
   448                           ;PWM.c: 93: }
   449                           ;PWM.c: 94: CCPR1L = dim;
   450  003C  0876               	movf	PowerLEDHandler@dim,w
   451  003D  0095               	movwf	21	;volatile
   452                           
   453                           ;PWM.c: 95: state=0;
   454  003E  01F7               	clrf	PowerLEDHandler@state
   455                           
   456                           ;PWM.c: 96: }
   457                           ;PWM.c: 97: break;
   458  003F  0008               	return
   459  0040                     l595:	
   460                           ;PWM.c: 98: case 2:
   461                           
   462                           
   463                           ;PWM.c: 99: if (delay==0)
   464  0040  0878               	movf	_delay,w
   465  0041  1D03               	btfss	3,2
   466  0042  0008               	return
   467                           
   468                           ;PWM.c: 100: {
   469                           ;PWM.c: 101: delay= 12;
   470  0043  300C               	movlw	12
   471  0044  00F5               	movwf	??_PowerLEDHandler
   472  0045  0875               	movf	??_PowerLEDHandler,w
   473  0046  00F8               	movwf	_delay
   474                           
   475                           ;PWM.c: 103: if (dim <255)
   476  0047  0A76               	incf	PowerLEDHandler@dim,w
   477  0048  1903               	btfsc	3,2
   478  0049  284E               	goto	l603
   479                           
   480                           ;PWM.c: 104: dim++;
   481  004A  3001               	movlw	1
   482  004B  00F5               	movwf	??_PowerLEDHandler
   483  004C  0875               	movf	??_PowerLEDHandler,w
   484  004D  07F6               	addwf	PowerLEDHandler@dim,f
   485  004E                     l603:	
   486                           
   487                           ;PWM.c: 105: CCPR1L = dim;
   488  004E  0876               	movf	PowerLEDHandler@dim,w
   489  004F  1283               	bcf	3,5	;RP0=0, select bank0
   490  0050  1303               	bcf	3,6	;RP1=0, select bank0
   491  0051  0095               	movwf	21	;volatile
   492                           
   493                           ;PWM.c: 106: if (RA0 == 0)
   494  0052  1805               	btfsc	5,0	;volatile
   495  0053  0008               	return
   496                           
   497                           ;PWM.c: 107: state=0;
   498  0054  01F7               	clrf	PowerLEDHandler@state
   499                           
   500                           ;PWM.c: 108: }
   501                           ;PWM.c: 109: break;
   502  0055  0008               	return
   503  0056                     l609:	
   504                           ;PWM.c: 110: case 3:
   505                           
   506                           
   507                           ;PWM.c: 111: if (delay==0)
   508  0056  0878               	movf	_delay,w
   509  0057  1D03               	btfss	3,2
   510  0058  0008               	return
   511                           
   512                           ;PWM.c: 112: {
   513                           ;PWM.c: 113: delay= 12;
   514  0059  300C               	movlw	12
   515  005A  00F5               	movwf	??_PowerLEDHandler
   516  005B  0875               	movf	??_PowerLEDHandler,w
   517  005C  00F8               	movwf	_delay
   518                           
   519                           ;PWM.c: 114: if (dim >0)
   520  005D  0876               	movf	PowerLEDHandler@dim,w
   521  005E  1903               	btfsc	3,2
   522  005F  2862               	goto	l617
   523                           
   524                           ;PWM.c: 115: dim--;
   525  0060  3001               	movlw	1
   526  0061  02F6               	subwf	PowerLEDHandler@dim,f
   527  0062                     l617:	
   528                           
   529                           ;PWM.c: 116: CCPR1L = dim;
   530  0062  0876               	movf	PowerLEDHandler@dim,w
   531  0063  1283               	bcf	3,5	;RP0=0, select bank0
   532  0064  1303               	bcf	3,6	;RP1=0, select bank0
   533  0065  0095               	movwf	21	;volatile
   534                           
   535                           ;PWM.c: 117: if (RA1 == 0)
   536  0066  1885               	btfsc	5,1	;volatile
   537  0067  0008               	return
   538                           
   539                           ;PWM.c: 118: state=0;
   540  0068  01F7               	clrf	PowerLEDHandler@state
   541                           
   542                           ;PWM.c: 122: }
   543                           
   544                           ;PWM.c: 119: }
   545                           ;PWM.c: 120: break;
   546  0069  0008               	return
   547  006A                     l625:	
   548  006A  0877               	movf	PowerLEDHandler@state,w
   549                           
   550                           ; Switch size 1, requested type "space"
   551                           ; Number of cases is 4, Range of values is 0 to 3
   552                           ; switch strategies available:
   553                           ; Name         Instructions Cycles
   554                           ; simple_byte           13     7 (average)
   555                           ; direct_byte           15     7 (fixed)
   556                           ; jumptable            260     6 (fixed)
   557                           ;	Chosen strategy is simple_byte
   558  006B  3A00               	xorlw	0	; case 0
   559  006C  1903               	skipnz
   560  006D  281A               	goto	l59
   561  006E  3A01               	xorlw	1	; case 1
   562  006F  1903               	skipnz
   563  0070  282D               	goto	l64
   564  0071  3A03               	xorlw	3	; case 2
   565  0072  1903               	skipnz
   566  0073  2840               	goto	l595
   567  0074  3A01               	xorlw	1	; case 3
   568  0075  1903               	skipnz
   569  0076  2856               	goto	l609
   570  0077  2878               	goto	l76
   571  0078                     l76:	
   572  0078  0008               	return
   573  0079                     __end_of_PowerLEDHandler:	
   574                           
   575                           	psect	text3
   576  009A                     __ptext3:	
   577 ;; *************** function _ISR *****************
   578 ;; Defined at:
   579 ;;		line 155 in file "PWM.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;		None               void
   586 ;; Registers used:
   587 ;;		wreg, status,2, status,0
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   593 ;;      Params:         0       0       0       0
   594 ;;      Locals:         0       0       0       0
   595 ;;      Temps:          4       0       0       0
   596 ;;      Totals:         4       0       0       0
   597 ;;Total ram usage:        4 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		Interrupt level 1
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _ISR
   608  009A                     _ISR:	
   609                           
   610                           ;PWM.c: 157: if(T0IE && T0IF)
   611  009A  1A8B               	btfsc	11,5	;volatile
   612  009B  1D0B               	btfss	11,2	;volatile
   613  009C  28A3               	goto	i1l81
   614                           
   615                           ;PWM.c: 158: {
   616                           ;PWM.c: 159: T0IF = 0;
   617  009D  110B               	bcf	11,2	;volatile
   618                           
   619                           ;PWM.c: 160: if (delay>0)
   620  009E  0878               	movf	_delay,w
   621  009F  1903               	btfsc	3,2
   622  00A0  28A3               	goto	i1l81
   623                           
   624                           ;PWM.c: 161: delay--;
   625  00A1  3001               	movlw	1
   626  00A2  02F8               	subwf	_delay,f
   627  00A3                     i1l81:	
   628  00A3  0874               	movf	??_ISR+3,w
   629  00A4  00FF               	movwf	127
   630  00A5  0873               	movf	??_ISR+2,w
   631  00A6  008A               	movwf	10
   632  00A7  0872               	movf	??_ISR+1,w
   633  00A8  0084               	movwf	4
   634  00A9  0E71               	swapf	??_ISR^(0+-128),w
   635  00AA  0083               	movwf	3
   636  00AB  0EFE               	swapf	126,f
   637  00AC  0E7E               	swapf	126,w
   638  00AD  0009               	retfie
   639  00AE                     __end_of_ISR:	
   640  007E                     btemp	set	126	;btemp
   641  007E                     wtemp	set	126
   642  007E                     wtemp0	set	126
   643  0080                     wtemp1	set	128
   644  0082                     wtemp2	set	130
   645  0084                     wtemp3	set	132
   646  0086                     wtemp4	set	134
   647  0088                     wtemp5	set	136
   648  007F                     wtemp6	set	127
   649  007E                     ttemp	set	126
   650  007E                     ttemp0	set	126
   651  0081                     ttemp1	set	129
   652  0084                     ttemp2	set	132
   653  0087                     ttemp3	set	135
   654  007F                     ttemp4	set	127
   655  007E                     ltemp	set	126
   656  007E                     ltemp0	set	126
   657  0082                     ltemp1	set	130
   658  0086                     ltemp2	set	134
   659  0080                     ltemp3	set	128
   660                           
   661                           	psect	intentry
   662  0004                     __pintentry:	
   663                           ;incstack = 0
   664                           ; Regs used in _ISR: [wreg+status,2+status,0]
   665                           
   666  0004                     interrupt_function:	
   667  007E                     saved_w	set	btemp
   668  0004  00FE               	movwf	btemp
   669  0005  0E03               	swapf	3,w
   670  0006  00F1               	movwf	??_ISR
   671  0007  0804               	movf	4,w
   672  0008  00F2               	movwf	??_ISR+1
   673  0009  080A               	movf	10,w
   674  000A  00F3               	movwf	??_ISR+2
   675  000B  1283               	bcf	3,5	;RP0=0, select bank0
   676  000C  1303               	bcf	3,6	;RP1=0, select bank0
   677  000D  087F               	movf	btemp+1,w
   678  000E  00F4               	movwf	??_ISR+3
   679  000F  118A  289A         	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      5       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            69      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PowerLEDHandler

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _PowerLEDHandler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PowerLEDHandler                                      1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PowerLEDHandler
   _SystemInit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      5       8       1       61.5%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       8       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            45      0       0       8        0.0%
BANK2               45      0       0       9        0.0%
DATA                 0      0       8      10        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat May 02 22:38:01 2015

             __CFG_CP$OFF 0000                        l64 002D                        l59 001A  
                      l76 0078                       l603 004E                       l617 0062  
                     l609 0056                       l625 006A                       l573 0022  
                     l629 00B1                       l591 003C                       l577 0028  
                     l595 0040                       l587 003A                       _GIE 005F  
                     _RA0 0028                       _RA1 0029                       _RA2 002A  
                     _RC2 003A                       _PR2 0092              __CFG_CPD$OFF 0000  
                     _ISR 009A                       fsr0 0004              __CFG_FOSC$HS 0000  
            __CFG_LVP$OFF 0000                      ?_ISR 0071                      _T0IE 005D  
                    _T0IF 005A                      i1l81 00A3              __CFG_WRT$OFF 0000  
                    _main 00AE                      btemp 007E                      ltemp 007E  
                    start 0011                      ttemp 007E                      wtemp 007E  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                     ??_ISR 0071  
        ?_PowerLEDHandler 0071                     _DC1B0 00BC                     _DC1B1 00BD  
                   ?_main 0071             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _TRISA 0085                     _TRISC 0087            __CFG_FCMEN$OFF 0000  
                   _delay 0078            __CFG_BOREN$OFF 0000                     pclath 000A  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 0013  
            __end_of_main 00B5                    ??_main 0076                    _CCPR1L 0015  
                  _TMR2ON 0092            __CFG_PWRTE$OFF 0000                    saved_w 007E  
 __end_of__initialization 0016            __pcstackCOMMON 0071                _SystemInit 0079  
              __pmaintext 00AE                __pintentry 0004                   _T2CKPS0 0090  
                 _T2CKPS1 0091                   __ptext0 0000                   __ptext1 0079  
                 __ptext2 0019                   __ptext3 009A              __size_of_ISR 0014  
             ?_SystemInit 0071  __size_of_PowerLEDHandler 0060      end_of_initialization 0016  
     __size_of_SystemInit 0021       start_initialization 0013               __end_of_ISR 00AE  
    PowerLEDHandler@state 0077         ??_PowerLEDHandler 0075               __pbssCOMMON 0076  
               ___latbits 0001              ??_SystemInit 0075         interrupt_function 0004  
      __end_of_SystemInit 009A           _PowerLEDHandler 0019         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0007        PowerLEDHandler@dim 0076                  intlevel1 0000  
 __end_of_PowerLEDHandler 0079                _OPTION_REG 0081  
